cpu/opcode design

LDA immediate		80 xx	load a immediate
LDA <mem>			84 mm	load a from mem
INA					02		input a from serial
LDB immediate		81 xx	load b immediate
LDB <mem>
STA <mem>			88 mm	store a to mem
OUTA				01		output a to serial
STB <mem>
HLT					00		halt
ADD					04		add
BRA <offset>		90 xx	branch
BRZ <offset>		91 xx	branch if zero
CLF					03		clear flags

-------- simple add
LDA #77
LDB #33
ADD
OUTA
HTL
--------
00004780778133040100	output: aa

-------- branches
BRA +4		90 04
LDA #77		80 77
OUTA		01
HLT			00
LDA #66		80 66
OUTA		01
BRA -9		90 f5			// 11110101 -> 11110110 -> 00001001 == -9 
--------
00004b90048077010080660190f5	output: 66 77


-------- branch if zero
LDA #0		80 00
LDB #0		81 00
ADD			04
BRZ +2		91 02
OUTA		01
HLT			00
LDA #1		80 01
OUTA		01
HLT			00
--------
00004d80008100049102010080010100	output: 01

-------- 16 byte add
CLF			03
LDA #f0		80 f0
LDB #f0		81 f0
ADD			04
OUTA		01
LDA #0		80 00
LDB #0		81 00
ADD			04
OUTA		01
HLT			00
--------
00004e0380f081f0040180008100040100	output: e0 01

